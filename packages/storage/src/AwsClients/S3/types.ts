// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

// Generated by scripts/dts-bundler/README.md
// Manual change needed: GetObjectCommandOutput.Body

import { MetadataBearer as __MetadataBearer } from '@aws-sdk/types';
import { HttpResponse } from '@aws-amplify/core/internals/aws-client-utils';

declare const ChecksumAlgorithm: {
	readonly CRC32: 'CRC32';
	readonly CRC32C: 'CRC32C';
	readonly SHA1: 'SHA1';
	readonly SHA256: 'SHA256';
};
declare const ChecksumMode: {
	readonly ENABLED: 'ENABLED';
};
declare const EncodingType: {
	readonly url: 'url';
};
declare const ObjectLockLegalHoldStatus: {
	readonly OFF: 'OFF';
	readonly ON: 'ON';
};
declare const ObjectLockMode: {
	readonly COMPLIANCE: 'COMPLIANCE';
	readonly GOVERNANCE: 'GOVERNANCE';
};
declare const ObjectStorageClass: {
	readonly DEEP_ARCHIVE: 'DEEP_ARCHIVE';
	readonly GLACIER: 'GLACIER';
	readonly GLACIER_IR: 'GLACIER_IR';
	readonly INTELLIGENT_TIERING: 'INTELLIGENT_TIERING';
	readonly ONEZONE_IA: 'ONEZONE_IA';
	readonly OUTPOSTS: 'OUTPOSTS';
	readonly REDUCED_REDUNDANCY: 'REDUCED_REDUNDANCY';
	readonly SNOW: 'SNOW';
	readonly STANDARD: 'STANDARD';
	readonly STANDARD_IA: 'STANDARD_IA';
};
declare const ReplicationStatus: {
	readonly COMPLETE: 'COMPLETE';
	readonly FAILED: 'FAILED';
	readonly PENDING: 'PENDING';
	readonly REPLICA: 'REPLICA';
};
declare const RequestCharged: {
	readonly requester: 'requester';
};
declare const RequestPayer: {
	readonly requester: 'requester';
};
declare const ServerSideEncryption: {
	readonly AES256: 'AES256';
	readonly aws_kms: 'aws:kms';
};
declare const StorageClass: {
	readonly DEEP_ARCHIVE: 'DEEP_ARCHIVE';
	readonly GLACIER: 'GLACIER';
	readonly GLACIER_IR: 'GLACIER_IR';
	readonly INTELLIGENT_TIERING: 'INTELLIGENT_TIERING';
	readonly ONEZONE_IA: 'ONEZONE_IA';
	readonly OUTPOSTS: 'OUTPOSTS';
	readonly REDUCED_REDUNDANCY: 'REDUCED_REDUNDANCY';
	readonly SNOW: 'SNOW';
	readonly STANDARD: 'STANDARD';
	readonly STANDARD_IA: 'STANDARD_IA';
};
/**
 * @public
 * <p>Container for all (if there are any) keys between Prefix and the next occurrence of the
 *          string specified by a delimiter. CommonPrefixes lists keys that act like subdirectories in
 *          the directory specified by Prefix. For example, if the prefix is notes/ and the delimiter
 *          is a slash (/) as in notes/summer/july, the common prefix is notes/summer/. </p>
 */
export interface CommonPrefix {
	/**
	 * <p>Container for the specified common prefix.</p>
	 */
	Prefix?: string;
}
/**
 * @public
 *
 * The input for {@link GetObjectCommand}.
 */
export interface GetObjectCommandInput extends GetObjectRequest {}
/**
 * @public
 *
 * The output of {@link GetObjectCommand}.
 */
export interface GetObjectCommandOutput
	extends GetObjectOutput,
		__MetadataBearer {}
/**
 * @public
 */
export interface GetObjectOutput {
	/**
	 * <p>Object data.</p>
	 */
	Body?: HttpResponse['body'];
	/**
	 * <p>Specifies whether the object retrieved was (true) or was not (false) a Delete Marker. If
	 *          false, this response header does not appear in the response.</p>
	 */
	DeleteMarker?: boolean;
	/**
	 * <p>Indicates that a range of bytes was specified.</p>
	 */
	AcceptRanges?: string;
	/**
	 * <p>If the object expiration is configured (see PUT Bucket lifecycle), the response includes
	 *          this header. It includes the <code>expiry-date</code> and <code>rule-id</code> key-value
	 *          pairs providing object expiration information. The value of the <code>rule-id</code> is
	 *          URL-encoded.</p>
	 */
	Expiration?: string;
	/**
	 * <p>Provides information about object restoration action and expiration time of the restored
	 *          object copy.</p>
	 */
	Restore?: string;
	/**
	 * <p>Creation date of the object.</p>
	 */
	LastModified?: Date;
	/**
	 * <p>Size of the body in bytes.</p>
	 */
	ContentLength?: number;
	/**
	 * <p>An entity tag (ETag) is an opaque identifier assigned by a web server to a specific
	 *          version of a resource found at a URL.</p>
	 */
	ETag?: string;
	/**
	 * <p>The base64-encoded, 32-bit CRC32 checksum of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumCRC32?: string;
	/**
	 * <p>The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumCRC32C?: string;
	/**
	 * <p>The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumSHA1?: string;
	/**
	 * <p>The base64-encoded, 256-bit SHA-256 digest of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumSHA256?: string;
	/**
	 * <p>This is set to the number of metadata entries not returned in <code>x-amz-meta</code>
	 *          headers. This can happen if you create metadata using an API like SOAP that supports more
	 *          flexible metadata than the REST API. For example, using SOAP, you can create metadata whose
	 *          values are not legal HTTP headers.</p>
	 */
	MissingMeta?: number;
	/**
	 * <p>Version of the object.</p>
	 */
	VersionId?: string;
	/**
	 * <p>Specifies caching behavior along the request/reply chain.</p>
	 */
	CacheControl?: string;
	/**
	 * <p>Specifies presentational information for the object.</p>
	 */
	ContentDisposition?: string;
	/**
	 * <p>Specifies what content encodings have been applied to the object and thus what decoding
	 *          mechanisms must be applied to obtain the media-type referenced by the Content-Type header
	 *          field.</p>
	 */
	ContentEncoding?: string;
	/**
	 * <p>The language the content is in.</p>
	 */
	ContentLanguage?: string;
	/**
	 * <p>The portion of the object returned in the response.</p>
	 */
	ContentRange?: string;
	/**
	 * <p>A standard MIME type describing the format of the object data.</p>
	 */
	ContentType?: string;
	/**
	 * <p>The date and time at which the object is no longer cacheable.</p>
	 */
	Expires?: Date;
	/**
	 * <p>If the bucket is configured as a website, redirects requests for this object to another
	 *          object in the same bucket or to an external URL. Amazon S3 stores the value of this header in
	 *          the object metadata.</p>
	 */
	WebsiteRedirectLocation?: string;
	/**
	 * <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example,
	 *          AES256, <code>aws:kms</code>).</p>
	 */
	ServerSideEncryption?: ServerSideEncryption | string;
	/**
	 * <p>A map of metadata to store with the object in S3.</p>
	 */
	Metadata?: Record<string, string>;
	/**
	 * <p>If server-side encryption with a customer-provided encryption key was requested, the
	 *          response will include this header confirming the encryption algorithm used.</p>
	 */
	SSECustomerAlgorithm?: string;
	/**
	 * <p>If server-side encryption with a customer-provided encryption key was requested, the
	 *          response will include this header to provide round-trip message integrity verification of
	 *          the customer-provided encryption key.</p>
	 */
	SSECustomerKeyMD5?: string;
	/**
	 * <p>If present, specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric
	 *          encryption customer managed key that was used for the object.</p>
	 */
	SSEKMSKeyId?: string;
	/**
	 * <p>Indicates whether the object uses an S3 Bucket Key for server-side encryption with Amazon Web Services
	 *          KMS (SSE-KMS).</p>
	 */
	BucketKeyEnabled?: boolean;
	/**
	 * <p>Provides storage class information of the object. Amazon S3 returns this header for all
	 *          objects except for S3 Standard storage class objects.</p>
	 */
	StorageClass?: StorageClass | string;
	/**
	 * <p>If present, indicates that the requester was successfully charged for the
	 *          request.</p>
	 */
	RequestCharged?: RequestCharged | string;
	/**
	 * <p>Amazon S3 can return this if your request involves a bucket that is either a source or
	 *          destination in a replication rule.</p>
	 */
	ReplicationStatus?: ReplicationStatus | string;
	/**
	 * <p>The count of parts this object has. This value is only returned if you specify
	 *             <code>partNumber</code> in your request and the object was uploaded as a multipart
	 *          upload.</p>
	 */
	PartsCount?: number;
	/**
	 * <p>The number of tags, if any, on the object.</p>
	 */
	TagCount?: number;
	/**
	 * <p>The Object Lock mode currently in place for this object.</p>
	 */
	ObjectLockMode?: ObjectLockMode | string;
	/**
	 * <p>The date and time when this object's Object Lock will expire.</p>
	 */
	ObjectLockRetainUntilDate?: Date;
	/**
	 * <p>Indicates whether this object has an active legal hold. This field is only returned if
	 *          you have permission to view an object's legal hold status. </p>
	 */
	ObjectLockLegalHoldStatus?: ObjectLockLegalHoldStatus | string;
}
/**
 * @public
 */
export interface GetObjectRequest {
	/**
	 * <p>The bucket name containing the object. </p>
	 *          <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>When using an Object Lambda access point the hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-object-lambda.<i>Region</i>.amazonaws.com.</p>
	 *          <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * <p>Note: To supply the Multi-region Access Point (MRAP) to Bucket, you need to install the "@aws-sdk/signature-v4-crt" package to your project dependencies.
	 * For more information, please go to https://github.com/aws/aws-sdk-js-v3#known-issues</p>
	 */
	Bucket: string | undefined;
	/**
	 * <p>Return the object only if its entity tag (ETag) is the same as the one specified;
	 *          otherwise, return a 412 (precondition failed) error.</p>
	 */
	IfMatch?: string;
	/**
	 * <p>Return the object only if it has been modified since the specified time; otherwise,
	 *          return a 304 (not modified) error.</p>
	 */
	IfModifiedSince?: Date;
	/**
	 * <p>Return the object only if its entity tag (ETag) is different from the one specified;
	 *          otherwise, return a 304 (not modified) error.</p>
	 */
	IfNoneMatch?: string;
	/**
	 * <p>Return the object only if it has not been modified since the specified time; otherwise,
	 *          return a 412 (precondition failed) error.</p>
	 */
	IfUnmodifiedSince?: Date;
	/**
	 * <p>Key of the object to get.</p>
	 */
	Key: string | undefined;
	/**
	 * <p>Downloads the specified range bytes of an object. For more information about the HTTP
	 *          Range header, see <a href="https://www.rfc-editor.org/rfc/rfc9110.html#name-range">https://www.rfc-editor.org/rfc/rfc9110.html#name-range</a>.</p>
	 *          <note>
	 *             <p>Amazon S3 doesn't support retrieving multiple ranges of data per <code>GET</code>
	 *             request.</p>
	 *          </note>
	 */
	Range?: string;
	/**
	 * <p>Sets the <code>Cache-Control</code> header of the response.</p>
	 */
	ResponseCacheControl?: string;
	/**
	 * <p>Sets the <code>Content-Disposition</code> header of the response</p>
	 */
	ResponseContentDisposition?: string;
	/**
	 * <p>Sets the <code>Content-Encoding</code> header of the response.</p>
	 */
	ResponseContentEncoding?: string;
	/**
	 * <p>Sets the <code>Content-Language</code> header of the response.</p>
	 */
	ResponseContentLanguage?: string;
	/**
	 * <p>Sets the <code>Content-Type</code> header of the response.</p>
	 */
	ResponseContentType?: string;
	/**
	 * <p>Sets the <code>Expires</code> header of the response.</p>
	 */
	ResponseExpires?: Date;
	/**
	 * <p>VersionId used to reference a specific version of the object.</p>
	 */
	VersionId?: string;
	/**
	 * <p>Specifies the algorithm to use to when decrypting the object (for example,
	 *          AES256).</p>
	 */
	SSECustomerAlgorithm?: string;
	/**
	 * <p>Specifies the customer-provided encryption key for Amazon S3 used to encrypt the data. This
	 *          value is used to decrypt the object when recovering it and must match the one used when
	 *          storing the data. The key must be appropriate for use with the algorithm specified in the
	 *             <code>x-amz-server-side-encryption-customer-algorithm</code> header.</p>
	 */
	SSECustomerKey?: string;
	/**
	 * <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses
	 *          this header for a message integrity check to ensure that the encryption key was transmitted
	 *          without error.</p>
	 */
	SSECustomerKeyMD5?: string;
	/**
	 * <p>Confirms that the requester knows that they will be charged for the request. Bucket
	 *          owners need not specify this parameter in their requests. For information about downloading
	 *          objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in
	 *             Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	RequestPayer?: RequestPayer | string;
	/**
	 * <p>Part number of the object being read. This is a positive integer between 1 and 10,000.
	 *          Effectively performs a 'ranged' GET request for the part specified. Useful for downloading
	 *          just a part of an object.</p>
	 */
	PartNumber?: number;
	/**
	 * <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
	 */
	ExpectedBucketOwner?: string;
	/**
	 * <p>To retrieve the checksum, this mode must be enabled.</p>
	 */
	ChecksumMode?: ChecksumMode | string;
}
/**
 * @public
 *
 * The input for {@link ListObjectsV2Command}.
 */
export interface ListObjectsV2CommandInput extends ListObjectsV2Request {}
/**
 * @public
 *
 * The output of {@link ListObjectsV2Command}.
 */
export interface ListObjectsV2CommandOutput
	extends ListObjectsV2Output,
		__MetadataBearer {}
/**
 * @public
 */
export interface ListObjectsV2Output {
	/**
	 * <p>Set to false if all of the results were returned. Set to true if more keys are available
	 *          to return. If the number of results exceeds that specified by MaxKeys, all of the results
	 *          might not be returned.</p>
	 */
	IsTruncated?: boolean;
	/**
	 * <p>Metadata about each object returned.</p>
	 */
	Contents?: _Object[];
	/**
	 * <p>The bucket name.</p>
	 *          <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	Name?: string;
	/**
	 * <p> Keys that begin with the indicated prefix.</p>
	 */
	Prefix?: string;
	/**
	 * <p>Causes keys that contain the same string between the prefix and the first occurrence of
	 *          the delimiter to be rolled up into a single result element in the CommonPrefixes
	 *          collection. These rolled-up keys are not returned elsewhere in the response. Each rolled-up
	 *          result counts as only one return against the <code>MaxKeys</code> value.</p>
	 */
	Delimiter?: string;
	/**
	 * <p>Sets the maximum number of keys returned in the response. By default the action returns
	 *          up to 1,000 key names. The response might contain fewer keys but will never contain
	 *          more.</p>
	 */
	MaxKeys?: number;
	/**
	 * <p>All of the keys (up to 1,000) rolled up into a common prefix count as a single return
	 *          when calculating the number of returns.</p>
	 *          <p>A response can contain <code>CommonPrefixes</code> only if you specify a
	 *          delimiter.</p>
	 *          <p>
	 *             <code>CommonPrefixes</code> contains all (if there are any) keys between
	 *             <code>Prefix</code> and the next occurrence of the string specified by a
	 *          delimiter.</p>
	 *          <p>
	 *             <code>CommonPrefixes</code> lists keys that act like subdirectories in the directory
	 *          specified by <code>Prefix</code>.</p>
	 *          <p>For example, if the prefix is <code>notes/</code> and the delimiter is a slash
	 *             (<code>/</code>) as in <code>notes/summer/july</code>, the common prefix is
	 *             <code>notes/summer/</code>. All of the keys that roll up into a common prefix count as a
	 *          single return when calculating the number of returns. </p>
	 */
	CommonPrefixes?: CommonPrefix[];
	/**
	 * <p>Encoding type used by Amazon S3 to encode object key names in the XML response.</p>
	 *          <p>If you specify the encoding-type request parameter, Amazon S3 includes this element in the
	 *          response, and returns encoded key name values in the following response elements:</p>
	 *          <p>
	 *             <code>Delimiter, Prefix, Key,</code> and <code>StartAfter</code>.</p>
	 */
	EncodingType?: EncodingType | string;
	/**
	 * <p>KeyCount is the number of keys returned with this request. KeyCount will always be less
	 *          than or equal to the <code>MaxKeys</code> field. Say you ask for 50 keys, your result will
	 *          include 50 keys or fewer.</p>
	 */
	KeyCount?: number;
	/**
	 * <p> If ContinuationToken was sent with the request, it is included in the response.</p>
	 */
	ContinuationToken?: string;
	/**
	 * <p>
	 *             <code>NextContinuationToken</code> is sent when <code>isTruncated</code> is true, which
	 *          means there are more keys in the bucket that can be listed. The next list requests to Amazon S3
	 *          can be continued with this <code>NextContinuationToken</code>.
	 *             <code>NextContinuationToken</code> is obfuscated and is not a real key</p>
	 */
	NextContinuationToken?: string;
	/**
	 * <p>If StartAfter was sent with the request, it is included in the response.</p>
	 */
	StartAfter?: string;
}
/**
 * @public
 */
export interface ListObjectsV2Request {
	/**
	 * <p>Bucket name to list. </p>
	 *          <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * <p>Note: To supply the Multi-region Access Point (MRAP) to Bucket, you need to install the "@aws-sdk/signature-v4-crt" package to your project dependencies.
	 * For more information, please go to https://github.com/aws/aws-sdk-js-v3#known-issues</p>
	 */
	Bucket: string | undefined;
	/**
	 * <p>A delimiter is a character you use to group keys.</p>
	 */
	Delimiter?: string;
	/**
	 * <p>Encoding type used by Amazon S3 to encode object keys in the response.</p>
	 */
	EncodingType?: EncodingType | string;
	/**
	 * <p>Sets the maximum number of keys returned in the response. By default the action returns
	 *          up to 1,000 key names. The response might contain fewer keys but will never contain
	 *          more.</p>
	 */
	MaxKeys?: number;
	/**
	 * <p>Limits the response to keys that begin with the specified prefix.</p>
	 */
	Prefix?: string;
	/**
	 * <p>ContinuationToken indicates Amazon S3 that the list is being continued on this bucket with a
	 *          token. ContinuationToken is obfuscated and is not a real key.</p>
	 */
	ContinuationToken?: string;
	/**
	 * <p>The owner field is not present in listV2 by default, if you want to return owner field
	 *          with each key in the result then set the fetch owner field to true.</p>
	 */
	FetchOwner?: boolean;
	/**
	 * <p>StartAfter is where you want Amazon S3 to start listing from. Amazon S3 starts listing after this
	 *          specified key. StartAfter can be any key in the bucket.</p>
	 */
	StartAfter?: string;
	/**
	 * <p>Confirms that the requester knows that she or he will be charged for the list objects
	 *          request in V2 style. Bucket owners need not specify this parameter in their
	 *          requests.</p>
	 */
	RequestPayer?: RequestPayer | string;
	/**
	 * <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
	 */
	ExpectedBucketOwner?: string;
}
/**
 * @public
 * <p>Container for the owner's display name and ID.</p>
 */
export interface Owner {
	/**
	 * <p>Container for the display name of the owner. This value is only supported in the
	 *          following Amazon Web Services Regions:</p>
	 *          <ul>
	 *             <li>
	 *                <p>US East (N. Virginia)</p>
	 *             </li>
	 *             <li>
	 *                <p>US West (N. California)</p>
	 *             </li>
	 *             <li>
	 *                <p>US West (Oregon)</p>
	 *             </li>
	 *             <li>
	 *                <p>Asia Pacific (Singapore)</p>
	 *             </li>
	 *             <li>
	 *                <p>Asia Pacific (Sydney)</p>
	 *             </li>
	 *             <li>
	 *                <p>Asia Pacific (Tokyo)</p>
	 *             </li>
	 *             <li>
	 *                <p>Europe (Ireland)</p>
	 *             </li>
	 *             <li>
	 *                <p>South America (São Paulo)</p>
	 *             </li>
	 *          </ul>
	 */
	DisplayName?: string;
	/**
	 * <p>Container for the ID of the owner.</p>
	 */
	ID?: string;
}
/**
 * @public
 * <p>An object consists of data and its descriptive metadata.</p>
 */
export interface _Object {
	/**
	 * <p>The name that you assign to an object. You use the object key to retrieve the
	 *          object.</p>
	 */
	Key?: string;
	/**
	 * <p>Creation date of the object.</p>
	 */
	LastModified?: Date;
	/**
	 * <p>The entity tag is a hash of the object. The ETag reflects changes only to the contents
	 *          of an object, not its metadata. The ETag may or may not be an MD5 digest of the object
	 *          data. Whether or not it is depends on how the object was created and how it is encrypted as
	 *          described below:</p>
	 *          <ul>
	 *             <li>
	 *                <p>Objects created by the PUT Object, POST Object, or Copy operation, or through the
	 *                Amazon Web Services Management Console, and are encrypted by SSE-S3 or plaintext, have ETags that
	 *                are an MD5 digest of their object data.</p>
	 *             </li>
	 *             <li>
	 *                <p>Objects created by the PUT Object, POST Object, or Copy operation, or through the
	 *                Amazon Web Services Management Console, and are encrypted by SSE-C or SSE-KMS, have ETags that are
	 *                not an MD5 digest of their object data.</p>
	 *             </li>
	 *             <li>
	 *                <p>If an object is created by either the Multipart Upload or Part Copy operation, the
	 *                ETag is not an MD5 digest, regardless of the method of encryption. If an object is
	 *                larger than 16 MB, the Amazon Web Services Management Console will upload or copy that object as a
	 *                Multipart Upload, and therefore the ETag will not be an MD5 digest.</p>
	 *             </li>
	 *          </ul>
	 */
	ETag?: string;
	/**
	 * <p>The algorithm that was used to create a checksum of the object.</p>
	 */
	ChecksumAlgorithm?: (ChecksumAlgorithm | string)[];
	/**
	 * <p>Size in bytes of the object</p>
	 */
	Size?: number;
	/**
	 * <p>The class of storage used to store the object.</p>
	 */
	StorageClass?: ObjectStorageClass | string;
	/**
	 * <p>The owner of the object</p>
	 */
	Owner?: Owner;
}
/**
 * @public
 */
export type ChecksumAlgorithm =
	(typeof ChecksumAlgorithm)[keyof typeof ChecksumAlgorithm];
/**
 * @public
 */
export type ChecksumMode = (typeof ChecksumMode)[keyof typeof ChecksumMode];
/**
 * @public
 */
export type EncodingType = (typeof EncodingType)[keyof typeof EncodingType];
/**
 * @public
 */
export type ObjectLockLegalHoldStatus =
	(typeof ObjectLockLegalHoldStatus)[keyof typeof ObjectLockLegalHoldStatus];
/**
 * @public
 */
export type ObjectLockMode =
	(typeof ObjectLockMode)[keyof typeof ObjectLockMode];
/**
 * @public
 */
export type ObjectStorageClass =
	(typeof ObjectStorageClass)[keyof typeof ObjectStorageClass];
/**
 * @public
 */
export type ReplicationStatus =
	(typeof ReplicationStatus)[keyof typeof ReplicationStatus];
/**
 * @public
 */
export type RequestCharged =
	(typeof RequestCharged)[keyof typeof RequestCharged];
/**
 * @public
 */
export type RequestPayer = (typeof RequestPayer)[keyof typeof RequestPayer];
/**
 * @public
 */
export type ServerSideEncryption =
	(typeof ServerSideEncryption)[keyof typeof ServerSideEncryption];
/**
 * @public
 */
export type StorageClass = (typeof StorageClass)[keyof typeof StorageClass];

export {};
